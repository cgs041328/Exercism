
==================== FINAL INTERFACE ====================
2018-11-26 08:12:01.8389883 UTC

interface main:Main 8043
  interface hash: 4658b3fa1a362a25620432c42a226156
  ABI hash: 1eb2bf3d59ef1ebe9c4dfc1673c9788e
  export-list hash: 5be45be5b5410840856497b6bea2134c
  orphan hash: 917a9098b62e42214800726732fbb310
  flag hash: f4fda28648a61eaea4e3b5fe84b0b7aa
  opt_hash: 14e536840aca4e889cad654e6f9b79c1
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: HUnit-1.6.0.0 QuickCheck-2.11.3 Win32-2.6.1.0
                      ansi-terminal-0.8.0.4 array-0.5.2.0 base-4.11.1.0
                      bytestring-0.10.8.2 call-stack-0.1.0 clock-0.7.2 colour-2.3.4
                      containers-0.5.11.0 deepseq-1.4.3.0 directory-1.3.1.5
                      filepath-1.4.2 ghc-boot-th-8.4.3 ghc-prim-0.5.2.0 hamming-2.1.1.8
                      hspec-2.5.5 hspec-core-2.5.5 hspec-expectations-0.8.2
                      integer-gmp-1.0.2.0 mintty-0.1.2 pretty-1.1.3.6 primitive-0.6.3.0
                      quickcheck-io-0.2.0 random-1.1 setenv-0.1.1.3 stm-2.4.5.0
                      template-haskell-2.13.0.0 tf-random-0.5 time-1.8.0.2
                      transformers-0.5.5.0
orphans: colour-2.3.4:Data.Colour
         quickcheck-io-0.2.0:Test.QuickCheck.IO
         transformers-0.5.5.0:Control.Monad.Trans.Error
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         stm-2.4.5.0:Control.Monad.STM base-4.11.1.0:GHC.Float
         base-4.11.1.0:GHC.Base
family instance modules: base-4.11.1.0:Control.Applicative
                         base-4.11.1.0:Data.Complex base-4.11.1.0:Data.Functor.Compose
                         base-4.11.1.0:Data.Functor.Const
                         base-4.11.1.0:Data.Functor.Identity
                         base-4.11.1.0:Data.Functor.Product base-4.11.1.0:Data.Functor.Sum
                         base-4.11.1.0:Data.Monoid base-4.11.1.0:Data.Semigroup
                         base-4.11.1.0:Data.Semigroup.Internal base-4.11.1.0:Data.Version
                         base-4.11.1.0:Data.Void base-4.11.1.0:GHC.Exts
                         base-4.11.1.0:GHC.Generics base-4.11.1.0:GHC.IO.Exception
                         clock-0.7.2:System.Clock containers-0.5.11.0:Data.IntMap.Internal
                         containers-0.5.11.0:Data.IntSet.Internal
                         containers-0.5.11.0:Data.Map.Internal
                         containers-0.5.11.0:Data.Sequence.Internal
                         containers-0.5.11.0:Data.Set.Internal
                         ghc-boot-th-8.4.3:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.4.3:GHC.LanguageExtensions.Type
                         hspec-core-2.5.5:Test.Hspec.Core.Example
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         template-haskell-2.13.0.0:Language.Haskell.TH.Syntax
import  -/  base-4.11.1.0:Data.Foldable 6cf3e918f22d03c0870804f05cd183d1
import  -/  base-4.11.1.0:Data.Functor 920435f8ff93fffe1aec86c79e4fd45f
import  -/  base-4.11.1.0:GHC.Base b7dd14d8fe8d606dde5678ea6b0575e9
import  -/  base-4.11.1.0:GHC.Real 032ed0a1053f878238d78e95e75f2edf
import  -/  base-4.11.1.0:Prelude aca391812f777207b15d62bb5b9feb63
import  -/  ghc-prim-0.5.2.0:GHC.Types d9b3023de7feae4a5308d643da5543f7
import  -/  hamming-2.1.1.8:Hamming d5739217f7624bb3105521dcd55a26bd
import  -/  hspec-2.5.5:Test.Hspec 54df06f5d545fec5f91cea5cb55c0ae8
import  -/  hspec-2.5.5:Test.Hspec.Runner 9fe7f63f5e6ed51f346724e5e71cfbc5
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Config.Options 44eafedded707b18de0b18ece30e85fc
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Runner aacfbe7ef9810029c809d32d98b97f0a
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec c73480f52a618942c509ac8e85ded21d
import  -/  hspec-core-2.5.5:Test.Hspec.Core.Spec.Monad e5e9ce617af58e105519cbbabb1c58c0
import  -/  hspec-expectations-0.8.2:Test.Hspec.Expectations 40271346c6df10d72d14c4ff3ae952ea
import  -/  integer-gmp-1.0.2.0:GHC.Integer.Type 6713f4457912bac968474ebbf062cd01
0a6c6f118ad298629aac32862dd7b81d
  $s$fEqMaybe :: GHC.Classes.Eq (GHC.Base.Maybe GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Types.Int)
                  (\ (ds :: GHC.Base.Maybe GHC.Types.Int)
                     (ds1 :: GHC.Base.Maybe GHC.Types.Int) ->
                   case ds of wild {
                     GHC.Base.Nothing
                     -> case ds1 of wild1 {
                          GHC.Base.Nothing -> GHC.Types.True
                          GHC.Base.Just ipv -> GHC.Types.False }
                     GHC.Base.Just a1
                     -> case ds1 of wild1 {
                          GHC.Base.Nothing -> GHC.Types.False
                          GHC.Base.Just b1 -> GHC.Classes.eqInt a1 b1 } })
                  Main.$s$fEqMaybe_$s$fEqMaybe_$c/= -}
a6af794a94b016ec929e52eceea1d1ea
  $s$fEqMaybe_$c== ::
    GHC.Base.Maybe GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GHC.Base.Maybe GHC.Types.Int)
                   (ds1 :: GHC.Base.Maybe GHC.Types.Int) ->
                 case ds of wild {
                   GHC.Base.Nothing
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.True
                        GHC.Base.Just ipv -> GHC.Types.False }
                   GHC.Base.Just a1
                   -> case ds1 of wild1 {
                        GHC.Base.Nothing -> GHC.Types.False
                        GHC.Base.Just b1 -> GHC.Classes.eqInt a1 b1 } }) -}
74d7a6a2dfd29c7ffb661f8794b32b50
  $s$fEqMaybe_$s$fEqMaybe_$c/= ::
    GHC.Base.Maybe GHC.Types.Int
    -> GHC.Base.Maybe GHC.Types.Int -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Inline: (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ (x :: GHC.Base.Maybe GHC.Types.Int)
                   (y :: GHC.Base.Maybe GHC.Types.Int) ->
                 case x of wild {
                   GHC.Base.Nothing
                   -> case y of wild1 {
                        GHC.Base.Nothing -> GHC.Types.False
                        GHC.Base.Just ipv -> GHC.Types.True }
                   GHC.Base.Just a1
                   -> case y of wild1 {
                        GHC.Base.Nothing -> GHC.Types.True
                        GHC.Base.Just b1
                        -> case GHC.Classes.eqInt a1 b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }) -}
1a04ebe0b9affdb91cd4506e7ed9cb35
  $s$fShowMaybe :: GHC.Show.Show (GHC.Base.Maybe GHC.Types.Int)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (GHC.Base.Maybe GHC.Types.Int)
                  (GHC.Show.$fShowMaybe_$cshowsPrec
                     @ GHC.Types.Int
                     GHC.Show.$fShowInt)
                  (\ (x :: GHC.Base.Maybe GHC.Types.Int) ->
                   case x of wild {
                     GHC.Base.Nothing -> GHC.Show.$fShowMaybe4
                     GHC.Base.Just b1
                     -> GHC.Base.augment
                          @ GHC.Types.Char
                          (\ @ b
                             (c :: GHC.Types.Char -> b -> b)[OneShot]
                             (n :: b)[OneShot] ->
                           GHC.Base.foldr @ GHC.Types.Char @ b c n GHC.Show.$fShowMaybe1)
                          (GHC.Show.showSignedInt
                             GHC.Show.appPrec1
                             b1
                             (GHC.Types.[] @ GHC.Types.Char)) })
                  (\ (ls :: [GHC.Base.Maybe GHC.Types.Int]) (s :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (GHC.Base.Maybe GHC.Types.Int)
                     (GHC.Show.$fShowMaybe_$cshowsPrec
                        @ GHC.Types.Int
                        GHC.Show.$fShowInt
                        GHC.Show.$fShow(,)1)
                     ls
                     s) -}
c4e2e0d3349799d8b57e6707c13a27fa
  $s$fShowMaybe_$cshowList ::
    [GHC.Base.Maybe GHC.Types.Int] -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ls :: [GHC.Base.Maybe GHC.Types.Int]) (s :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (GHC.Base.Maybe GHC.Types.Int)
                   (GHC.Show.$fShowMaybe_$cshowsPrec
                      @ GHC.Types.Int
                      GHC.Show.$fShowInt
                      GHC.Show.$fShow(,)1)
                   ls
                   s) -}
8f470deca0048d02e6fc8121ab8abb17
  $tc'Case :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8197111133229858407##
                   13847006553897280588##
                   Main.$trModule
                   Main.$tc'Case2
                   0#
                   Main.$tc'Case1) -}
6fc21dd8b35ae7df9abfcd56a3c1f8ad
  $tc'Case1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
0c0299238ee13fbc2e14231d59357ec9
  $tc'Case2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tc'Case3) -}
b70b9a2f50a01b383c0fc203a93b45f6
  $tc'Case3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Case"#) -}
9f9427b68a1c0df6b95c3a3d566064e4
  $tcCase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   990021888930651814##
                   4262142848388084561##
                   Main.$trModule
                   Main.$tcCase1
                   0#
                   GHC.Types.krep$*) -}
b0dff1fba9a2e1fbd8ccfcfdc7bfd5cc
  $tcCase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$tcCase2) -}
7179be3aa9b5f07778c569f16b1ed2bf
  $tcCase2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Case"#) -}
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
910a67b55cbd5afed62e7dbbbe3504c9
  $wc ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Base.Maybe GHC.Integer.Type.Integer
    -> Control.Monad.Trans.Writer.Lazy.WriterT
         [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ()
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 6,
     Strictness: <L,1*U><L,U><L,U><L,U><C(S(SL)),1*C1(U(U,U(1*U,1*U)))><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Base.String)
                   (ww1 :: GHC.Base.String)
                   (ww2 :: GHC.Base.String)
                   (ww3 :: GHC.Base.Maybe GHC.Integer.Type.Integer)
                   (w :: Control.Monad.Trans.Writer.Lazy.WriterT
                           [Test.Hspec.Core.Tree.SpecTree ()] GHC.Types.IO ())
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w `cast`
                      (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                           <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                           <GHC.Types.IO>_R
                           <()>_N ; GHC.Types.N:IO[0]
                                        <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R)
                        w1 of ds1 { (#,#) ipv2 ipv3 ->
                 (# ipv2,
                    (case ipv3 of wild1 { (,) b1 w' -> b1 },
                     GHC.Base.++
                       @ (Test.Hspec.Core.Tree.Tree
                            (Test.Hspec.Core.Example.ActionWith ())
                            (Test.Hspec.Core.Tree.Item ()))
                       (GHC.Types.:
                          @ (Test.Hspec.Core.Tree.SpecTree
                               (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                          (Test.Hspec.Core.Tree.Leaf
                             @ (Test.Hspec.Core.Example.ActionWith
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             @ (Test.Hspec.Core.Tree.Item
                                  (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                             (Test.Hspec.Core.Tree.Item
                                @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                                (case ww of wild {
                                   []
                                   -> case Main.main50 of wild1 {
                                        GHC.Base.Nothing -> Test.Hspec.Core.Tree.specItem1
                                        GHC.Base.Just v -> v }
                                   : ds2 ds3 -> wild })
                                Main.main39
                                (GHC.Base.Nothing @ GHC.Types.Bool)
                                (Test.Hspec.Core.Example.safeEvaluateExample1
                                   @ Test.Hspec.Expectations.Expectation
                                   Test.Hspec.Core.Example.$fExampleIO1
                                     `cast`
                                   ((<Test.Hspec.Expectations.Expectation>_R
                                     ->_R <Test.Hspec.Core.Example.Params>_R
                                     ->_R <(Test.Hspec.Core.Example.Arg
                                              Test.Hspec.Expectations.Expectation
                                            -> GHC.Types.IO ())
                                           -> GHC.Types.IO ()>_R
                                     ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                     ->_R Sym (GHC.Types.N:IO[0]
                                                   <Test.Hspec.Core.Example.Result>_R)) ; Sym (Test.Hspec.Core.Example.N:Example[0]
                                                                                                   <Test.Hspec.Expectations.Expectation>_N))
                                   (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                    Test.HUnit.Lang.assertEqual1
                                      @ (GHC.Base.Maybe GHC.Types.Int)
                                      Main.main26
                                        `cast`
                                      (Sym (GHC.Classes.N:IP[0]
                                                <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                                      Main.$s$fEqMaybe
                                      Main.$s$fShowMaybe
                                      (GHC.Types.[] @ GHC.Types.Char)
                                      (case ww3 of wild {
                                         GHC.Base.Nothing -> GHC.Base.Nothing @ GHC.Types.Int
                                         GHC.Base.Just a1
                                         -> GHC.Base.Just
                                              @ GHC.Types.Int
                                              (case GHC.Integer.Type.integerToInt
                                                      a1 of wild1 { DEFAULT ->
                                               GHC.Types.I# wild1 }) })
                                      (Hamming.distance ww1 ww2)
                                      eta2)
                                     `cast`
                                   (Sym (GHC.Types.N:IO[0] <()>_R)))
                                  `cast`
                                (<Test.Hspec.Core.Example.Params>_R
                                 ->_R <Test.Hspec.Core.Example.ActionWith
                                         (Test.Hspec.Core.Example.Arg
                                            Test.Hspec.Expectations.Expectation)
                                       -> GHC.Types.IO ()>_R
                                 ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                                 ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))))
                          (GHC.Types.[]
                             @ (Test.Hspec.Core.Tree.SpecTree
                                  (Test.Hspec.Core.Example.Arg
                                     Test.Hspec.Expectations.Expectation))))
                         `cast`
                       ([(Test.Hspec.Core.Tree.Tree
                            (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                             ->_R <GHC.Types.IO ()>_R)
                            (Test.Hspec.Core.Tree.Item
                               (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                       (case ipv3 of wild { (,) b1 w' -> w' })) #) }) -}
767cefc810c8b397431add128e9c238e
  data Case
    = Case {description :: GHC.Base.String,
            strand1 :: GHC.Base.String,
            strand2 :: GHC.Base.String,
            expected :: GHC.Base.Maybe GHC.Integer.Type.Integer}
767cefc810c8b397431add128e9c238e
  description :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds1 }) -}
767cefc810c8b397431add128e9c238e
  expected :: Main.Case -> GHC.Base.Maybe GHC.Integer.Type.Integer
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds4 }) -}
95e0522d3bf568436862d008223ce9f7
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
9f3e3f6cb742ed1f9f4d9e6af952466d
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case Test.Hspec.Core.Runner.hspec2
                        Main.main140
                        Main.main2
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.exitFailure1 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
ca51f898e5bd0270e3a7b628925f419b
  main10 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main96
                   Main.main94
                   Main.main92
                   Main.main76
                   Main.main11
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
68c8150cf289c8b7c771b7a904dfe702
  main100 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main101) -}
a239df121b1b1b6dfe8758d947c95db0
  main101 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GGACG"#) -}
a1ac7790102e4f2d716dd89020c4dd1f
  main102 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main103) -}
2b2fd7dc8b18ccebbd5e8bb281539dfe
  main103 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("small distance"#) -}
34983052486a2e4d792d4275b8ef51d4
  main104 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main105) -}
1a8f0046b2a5c4ee939c84a8dbc015fd
  main105 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("CT"#) -}
d59e3de921ca58c2c111435404046d53
  main106 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main107) -}
54196e366b8004c714171b98ef4fb961
  main107 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AT"#) -}
5b6711ee85bdc3cc9f6007ca7e382da4
  main108 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main109) -}
07f8ec0dd067f9f6dfde88e55c29410b
  main109 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("small distance in small strands"#) -}
2359c7cc397f50f5e9014af93106c524
  main11 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main90
                   Main.main86
                   Main.main54
                   Main.main84
                   Main.main12
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
e5838466ae02aea4a971e418ea21e8ff
  main110 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main111) -}
fef3a839d31a5c0a2082f929af4689fc
  main111 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AG"#) -}
b065928e0044fe6b0c2a8a4613e6d24d
  main112 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main113) -}
301dd6e6b6e93814a390fecf289710bb
  main113 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("complete distance in small strands"#) -}
54fc42f3f21200e4be6319a8649e27b9
  main114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main115) -}
122b2f896cc5660bf21dd53a5bfdca94
  main115 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("G"#) -}
effaec87323805606572cf427f300e80
  main116 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main117) -}
b2dec4bfbadf8b8ab1aeb028142bae20
  main117 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("A"#) -}
e317d99729aff87685b622b5768b2ed8
  main118 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main119) -}
f8470eaecfda53b258917f6e2a16370b
  main119 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("complete distance in single nucleotide strands"#) -}
3470e00bb1691cd0ba092b9f556d039c
  main12 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main88
                   Main.main54
                   Main.main86
                   Main.main84
                   Main.main13
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
b6107b5c519825cbf8574c5293621494
  main120 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main121) -}
487bfcfa07ea57f7ab18f409a6e6d01a
  main121 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (0) -}
c69ee31ebace412cb47da5bb6eeb11a5
  main122 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main123) -}
4871857ac750c1042a2fa3b174345b01
  main123 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GGACTGA"#) -}
7934c280978550e77f756c0b599b75d2
  main124 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main125) -}
5f21312435ad4380214d90b03c903c13
  main125 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("long identical strands"#) -}
3962768ed5fd11b7a0ba8c929548ec33
  main126 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main127) -}
dd0115384881e546c9c093c9ee7edf74
  main127 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("identical strands"#) -}
728e5bc7e13945ba87f1323535821b85
  main128 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main129) -}
9aeff826d057a288b5156e6c35adb10c
  main129 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("empty strands"#) -}
7bbedf2a04901e2d8c55ea2ec5698589
  main13 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main82
                   Main.main80
                   Main.main78
                   Main.main76
                   Main.main14
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
4c107a6aef5f03438fb7a937e8a88668
  main130 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main131) -}
4d5c883fcd088a5dac0b437e65799590
  main131 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("distance"#) -}
c5246db0521f6b20106e9d6ff37daf65
  main132 ::
    GHC.Base.String
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
    -> Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Test.Hspec.Core.Spec.describe
                   @ ()
                   Main.main133
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))) -}
dbce74abfe9efb6905ee068bc58b4f58
  main133 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main138
                   Main.main134
                   GHC.Stack.Types.EmptyCallStack) -}
1230bac8e0aeec3e18656e30cdaff63e
  main134 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main36
                   Main.main35
                   Main.main33
                   Main.main137
                   Main.main136
                   Main.main137
                   Main.main135) -}
d2666ce6b98c9cc18d055f4e9ba8c759
  main135 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 28#) -}
5cb0dd03c4f131259e2ac12cb4c832c1
  main136 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 9#) -}
ab3f75a857f303e112f55c6cc08bd65a
  main137 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 14#) -}
74b63a54ce3cd0fe77bf8a5d18325651
  main138 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main139) -}
d1034035f09f68f404aabe7e0931b72d
  main139 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("describe"#) -}
48faac993e3242232d1d58cfe541a043
  main14 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main74
                   Main.main72
                   Main.main70
                   Main.main68
                   Main.main15
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
5869b5684e8a7b257c83d7387adbbd75
  main140 :: Test.Hspec.Core.Config.Options.Config
  {- Unfolding: (Test.Hspec.Core.Config.Options.Config
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.False
                   GHC.Types.True
                   (GHC.Base.Nothing @ GHC.IO.FilePath)
                   GHC.Types.False
                   GHC.Types.False
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ (Test.Hspec.Core.Util.Path -> GHC.Types.Bool))
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   (GHC.Base.Nothing @ GHC.Types.Int)
                   Test.Hspec.Core.Example.defaultParams1
                   Test.Hspec.Core.Config.Options.ColorAuto
                   GHC.Types.True
                   (GHC.Base.Nothing @ Test.Hspec.Core.Formatters.Monad.Formatter)
                   GHC.Types.False
                   Test.Hspec.Core.Config.Options.defaultConfig1
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
76550406347b461dfc6735a62a00fe9e
  main141 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
a39aa4958745fd2ad172db5ae5ccb728
  main15 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main66
                   Main.main64
                   Main.main62
                   Main.main60
                   Main.main16
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
9461b79f1eb1abf7255315e16e6f525d
  main16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main58
                   Main.main56
                   Main.main54
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   Main.main17
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
0347ae0cd41e6f3d58324f04fc48624f
  main17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main24
                   Main.main22
                   Main.main20
                   (GHC.Base.Nothing @ GHC.Integer.Type.Integer)
                   Main.main18
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
06687597b0a5727b8a852a6c1add636c
  main18 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.main19 #)) -}
03c23252b13d398d9d04d6f2ec14e3cb
  main19 :: ((), [Test.Hspec.Core.Tree.SpecTree ()])
  {- HasNoCafRefs, Strictness: m,
     Unfolding: ((GHC.Tuple.(),
                  GHC.Types.[]
                    @ (Test.Hspec.Core.Tree.Tree
                         (Test.Hspec.Core.Example.ActionWith ())
                         (Test.Hspec.Core.Tree.Item ())))) -}
fca06ee1aea6e6150cdf890f2377a229
  main2 :: Test.Hspec.Core.Spec.Monad.SpecWith ()
  {- Unfolding: (Main.main132
                   Main.main130
                   Main.main3
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                       <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                       <GHC.Types.IO>_R
                                                       <()>_N) ; Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0]
                                                                          <()>_N) <()>_N))) -}
e204e90f238e259cae4b4bf59c53be03
  main20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main21) -}
3c5f15eaf2a0f8e5bf05c67b0208b989
  main21 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AGTG"#) -}
148636c039561d2e1a54dc65512142c9
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main23) -}
2f3a48d20af367ec729a8109671e7516
  main23 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ATA"#) -}
036549c6fc177bed044748f60f2d2b98
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main25) -}
04f7ce483a0b9108a9cc6ac0d0cab371
  main25 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("disallow second strand longer"#) -}
557104afd3257da2178100fa95328e36
  main26 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?6
                   Test.HUnit.Base.@?=2
                   Main.main27) -}
9374513a47788f624bb1cd88f0ade289
  main27 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe6
                   Test.Hspec.Expectations.shouldBe2
                   Main.main28) -}
cbb87e4410bc325aec4bb63196bce72a
  main28 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main37
                   Main.main29
                   GHC.Stack.Types.EmptyCallStack) -}
95f9f2a91e9d88a88b914031a15fbf49
  main29 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main36
                   Main.main35
                   Main.main33
                   Main.main32
                   Main.main31
                   Main.main32
                   Main.main30) -}
04e92fc9b0587540df097967f95fea5e
  main3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 Main.$wc
                   Main.main128
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ GHC.Types.Char)
                   Main.main120
                   Main.main4
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
9fdf66eb0acc7bd3c1cc719ed779c239
  main30 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 69#) -}
f24526c32db2085c8d7e9dfb6957feff
  main31 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 22#) -}
977d92027b8817882a908cdfc2a61a69
  main32 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 19#) -}
99c0f9081f1e13087ae34d422af1b29c
  main33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main34) -}
2a0e31ab585e224a164752e293d57fcc
  main34 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("test\\Tests.hs"#) -}
cd0e5068354a83fae50e3c8647e37a91
  main35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule2) -}
0d890282ea9a1b8517f715606fa34ac4
  main36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.$trModule4) -}
48b45e13dd409c764302a26d7e272aa3
  main37 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main38) -}
2d335ba6f400817a86c7127213b24599
  main38 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("shouldBe"#) -}
f7283a98fead8e583ea0f9af3f926bee
  main39 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location.Location
  {- Unfolding: (Test.Hspec.Core.Tree.location11 Main.main40) -}
7b396c5645d1ce0df8710983d5ff5919
  main4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main126
                   Main.main116
                   Main.main116
                   Main.main120
                   Main.main5
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
3bc60de225b48e3ca2db7d825d7005d6
  main40 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.location1
                   Main.main41) -}
1fc7e07796e9e4e73f99e93c01fd639d
  main41 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem14
                   Test.Hspec.Core.Tree.specItem11
                   Main.main42) -}
651580eeb095388ce8fc1915329b2caa
  main42 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it6
                   Test.Hspec.Core.Spec.it2
                   Main.main43) -}
54152fb1fc27ff11dbd0054866721d0d
  main43 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Main.main48
                   Main.main44
                   GHC.Stack.Types.EmptyCallStack) -}
248ec6cfdf2d6ba00dae4b33cefed98f
  main44 :: GHC.Stack.Types.SrcLoc
  {- Strictness: m,
     Unfolding: (GHC.Stack.Types.SrcLoc
                   Main.main36
                   Main.main35
                   Main.main33
                   Main.main47
                   Main.main46
                   Main.main47
                   Main.main45) -}
4e1afda6355f6e42d44e0d8bdfe7be68
  main45 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 45#) -}
761231cf6b240f4903d389cfebbfa1b3
  main46 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 21#) -}
a88423a65be368312ead59c0e2ab3f60
  main47 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 17#) -}
79eeaa1e30db2d4d561ad8ac6e503e74
  main48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main49) -}
fdaf3e2c88ca6d0ef768dd1d39ca78f3
  main49 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("it"#) -}
e9e7570b9678a93be6c27b05a948f7a8
  main5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main124
                   Main.main122
                   Main.main122
                   Main.main120
                   Main.main6
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
f7dbda86a515b8d5dbc883a24cf3d29d
  main50 :: GHC.Base.Maybe GHC.Base.String
  {- Unfolding: (Test.Hspec.Core.Tree.specGroup19 Main.main51) -}
a55d7dfa7cafd708edfe38c643d2614c
  main51 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.location9
                   Test.Hspec.Core.Tree.specGroup15
                   Main.main52) -}
99076ef2b083f25a46ce131b8d21fdca
  main52 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specGroup13
                   Test.Hspec.Core.Tree.specItem9
                   Main.main53) -}
8622553f84262ed1d2e5be5071252020
  main53 :: GHC.Stack.Types.CallStack
  {- Strictness: m2,
     Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem7
                   Test.Hspec.Core.Tree.specItem3
                   Main.main42) -}
a49745fcd6d297a134b766e69f5a5362
  main54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main55) -}
d32f40caa5b495bfb8438e97e6f6a15f
  main55 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AAA"#) -}
dbb131cccd84555b92274bffde3a7e45
  main56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main57) -}
ba469258994d1712de6305fc944db1a7
  main57 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AATG"#) -}
e7728a854ce00500bc6caeeb5ddb76ef
  main58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main59) -}
b85be6933bbde2b382694172b0f5cda9
  main59 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("disallow first strand longer"#) -}
f844544a24ccb5e9fda924ebc044a7cd
  main6 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main118
                   Main.main116
                   Main.main114
                   Main.main84
                   Main.main7
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
b2f91fbd88f4ba0216795c6644cdb161
  main60 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main61) -}
b559aa071529cfa3c8fbc7571ecc87e2
  main61 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (9) -}
cab3464e60388368b719a287e3040bd9
  main62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main63) -}
9a50a967a6fc4003b2bb70f40ba18c62
  main63 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AGGACGGATTCT"#) -}
317659f6944fb4614b2b9988f1c86785
  main64 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main65) -}
1a44e94dc0e643014f26307577390111
  main65 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GGACGGATTCTG"#) -}
33e5416b83c96eae48033202c5d2d228
  main66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main67) -}
86b0bce88fb9d857f8f2d8f680341071
  main67 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("large distance in off-by-one strand"#) -}
0505dcede3d2f3155e364497f28a1b76
  main68 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main69) -}
cdbf4e3ae3f894cf58f0458058cd8dbf
  main69 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (4) -}
2eb4ddae09c97472669b2f1f6ded0106
  main7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main112
                   Main.main110
                   Main.main104
                   Main.main76
                   Main.main8
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
9e6f8af1dcdae067c1c07c66cf931b5c
  main70 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main71) -}
7f78b79ad01632eee31e27eb46e3cc87
  main71 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GCATAA"#) -}
089ea1083a698d0ac239706eea8a2926
  main72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main73) -}
06cc03c23dea55ebd7e98c6931d39753
  main73 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GATACA"#) -}
4ff44b080971a8dcb21f57dd25194046
  main74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main75) -}
ba904568b2279ea0b43a9819d667173a
  main75 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("large distance"#) -}
05d046186c9f27e0ac388ef7af63ff40
  main76 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main77) -}
366342d3721ee53129c0c735985b23fc
  main77 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (2) -}
4075272c1f4301fe68dfbc7215005b8b
  main78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main79) -}
d0a3f3d34b676ec2b1355cef4a848446
  main79 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GAT"#) -}
bf2e6b48d3ef655c2f1f400140d4bb4b
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main108
                   Main.main106
                   Main.main104
                   Main.main84
                   Main.main9
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
43f711390702d0adb7a581a2655cddaf
  main80 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main81) -}
9707241c986bdac3f487bf4723c1aef5
  main81 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("TAG"#) -}
15f195467ef9b36d270caec1ffad0101
  main82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main83) -}
1c1f09cb6453f65c397c5f8d9367b024
  main83 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("same nucleotides in different positions"#) -}
42b7c0a3a0b9c735b7ea3c29515e9ec8
  main84 :: GHC.Base.Maybe GHC.Integer.Type.Integer
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Base.Just
                   @ GHC.Integer.Type.Integer
                   Main.main85) -}
cd88a7d1123bf8a84013c515db1865f8
  main85 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (1) -}
9d1adac5d2d151b23b451a61d2a62a0c
  main86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main87) -}
92a7570b8e7c3c82778acf6fc666eaab
  main87 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("AAG"#) -}
86dfa4bd3c620eb693461aa1b997192c
  main88 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main89) -}
56016eda756c8c041193b91f6748a872
  main89 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("non-unique character in second strand"#) -}
76793533555ac13b8510718285b00099
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), [Test.Hspec.Core.Tree.SpecTree ()]) #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Main.$wc
                   Main.main102
                   Main.main100
                   Main.main98
                   Main.main84
                   Main.main10
                     `cast`
                   (Sym (GHC.Types.N:IO[0]
                             <((),
                               [Test.Hspec.Core.Tree.SpecTree
                                  ()])>_R) ; Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                                      <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))
                   w) -}
783efa6fb430a7cd167f17eed8f2f624
  main90 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main91) -}
52b9826d4680e298b719c72efe9f67f4
  main91 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("non-unique character in first strand"#) -}
3c28b781b5d68ea5218d0d3995af4954
  main92 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main93) -}
ae5347d18c83d1bc2be3319f4f2afbea
  main93 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ACTATGG"#) -}
07678b46cacff5e01199c7cbc40cd2bb
  main94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main95) -}
447ac04c175ff5895878e1a4d4968fdb
  main95 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("ACCAGGG"#) -}
15e4c9e44b2f18f02ed1e2eb513243bf
  main96 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main97) -}
d3100d6ffefd9c0d910416e73bad001a
  main97 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("small distance in long strands"#) -}
1020de09f6acc13b727bb1a32903c39a
  main98 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main99) -}
6de5b8e448887ef034fbbc2ea00b0dcd
  main99 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("GGTCG"#) -}
767cefc810c8b397431add128e9c238e
  strand1 :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds2 }) -}
767cefc810c8b397431add128e9c238e
  strand2 :: Main.Case -> GHC.Base.String
  RecSel Left Main.Case
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Case) ->
                 case ds of wild { Main.Case ds1 ds2 ds3 ds4 -> ds3 }) -}
"SPEC/Main $fEqMaybe @ Int" [orphan] forall (v :: GHC.Classes.Eq
                                                    GHC.Types.Int)
  GHC.Base.$fEqMaybe @ GHC.Types.Int v = Main.$s$fEqMaybe
"SPEC/Main $fEqMaybe_$c/= @ Int" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                            GHC.Types.Int)
  GHC.Base.$fEqMaybe_$c/= @ GHC.Types.Int $dEq
  = Main.$s$fEqMaybe_$s$fEqMaybe_$c/=
"SPEC/Main $fEqMaybe_$c== @ Int" [orphan] forall ($dEq :: GHC.Classes.Eq
                                                            GHC.Types.Int)
  GHC.Base.$fEqMaybe_$c== @ GHC.Types.Int $dEq
  = Main.$s$fEqMaybe_$c==
"SPEC/Main $fShowMaybe @ Int" [orphan] forall (v :: GHC.Show.Show
                                                      GHC.Types.Int)
  GHC.Show.$fShowMaybe @ GHC.Types.Int v = Main.$s$fShowMaybe
"SPEC/Main $fShowMaybe_$cshowList @ Int" [orphan] forall ($dShow :: GHC.Show.Show
                                                                      GHC.Types.Int)
  GHC.Show.$fShowMaybe_$cshowList @ GHC.Types.Int $dShow
  = Main.$s$fShowMaybe_$cshowList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

